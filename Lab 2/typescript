Script started on Sat 21 Jan 2012 02:37:48 PM PST
]0;shane425@uw1-320-18:~/Desktop/lab2[shane425@uw1-320-18 lab2]$ g++ lab2.cpp bintree.cpp nodedata.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[21Pvalgrind ./a.outg++ lab2.cpp bintree.cpp nodedata.cpp
]0;shane425@uw1-320-18:~/Desktop/lab2[shane425@uw1-320-18 lab2]$ g++ lab2.cpp bintree.cpp nodedata.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[21Pvalgrind ./a.out
==12175== Memcheck, a memory error detector
==12175== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==12175== Using Valgrind-3.5.0 and LibVEX; rerun with -h for copyright info
==12175== Command: ./a.out
==12175== 
Initial data:
  iii not tttt eee r not and jj r eee pp r sssss eee not tttt ooo ff m m y z $$ 
Tree Inorder:
and eee ff iii jj m not ooo pp r sssss tttt y z 
                        z
                    y
                tttt
                        sssss
                    r
                        pp
                            ooo
            not
                    m
                jj
        iii
                ff
            eee
                and
Retrieve --> and:  found
Retrieve --> not:  found
Retrieve --> sss:  not found
Depth    --> and:  3
Depth    --> not:  2
Depth    --> sss:  0
T == T2?     equal
T != first?  equal
T == dup?    equal
                    z
                y
                    tttt
            sssss
                    r
                pp
                    ooo
        not
                    m
                jj
                    iii
            ff
                    eee
                and
---------------------------------------------------------------
Initial data:
  b a c b a c $$ 
Tree Inorder:
a b c 
            c
        b
            a
Retrieve --> and:  not found
Retrieve --> not:  not found
Retrieve --> sss:  not found
Depth    --> and:  0
Depth    --> not:  0
Depth    --> sss:  0
T == T2?     equal
T != first?  not equal
T == dup?    not equal
            c
        b
            a
---------------------------------------------------------------
Initial data:
  c b a $$ 
Tree Inorder:
a b c 
        c
            b
                a
Retrieve --> and:  not found
Retrieve --> not:  not found
Retrieve --> sss:  not found
Depth    --> and:  0
Depth    --> not:  0
Depth    --> sss:  0
T == T2?     equal
T != first?  not equal
T == dup?    not equal
            c
        b
            a
---------------------------------------------------------------
Initial data:
   
==12175== 
==12175== HEAP SUMMARY:
==12175==     in use at exit: 0 bytes in 0 blocks
==12175==   total heap usage: 273 allocs, 273 frees, 11,125 bytes allocated
==12175== 
==12175== All heap blocks were freed -- no leaks are possible
==12175== 
==12175== For counts of detected and suppressed errors, rerun with: -v
==12175== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 15 from 8)
]0;shane425@uw1-320-18:~/Desktop/lab2[shane425@uw1-320-18 lab2]$ exit

Script done on Sat 21 Jan 2012 02:37:58 PM PST
